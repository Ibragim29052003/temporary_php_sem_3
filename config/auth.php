<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Authentication Defaults
    |--------------------------------------------------------------------------
    |
    | Здесь задаются настройки по умолчанию для аутентификации:
    | - guard — "охранник" (способ аутентификации, например, session или token)
    | - passwords — конфигурация сброса пароля
    | Эти значения можно менять под свои нужды, но они подходят для большинства приложений.
    |
    */
    'defaults' => [
        'guard' => 'web',
        'passwords' => 'users',
    ],

    /*
    |--------------------------------------------------------------------------
    | Authentication Guards
    |--------------------------------------------------------------------------
    |
    | Определение каждого "охранника" для приложения. Guard определяет,
    | как пользователи будут аутентифицироваться (например, через сессии).
    |
    | Каждый guard использует провайдера пользователей (user provider),
    | который отвечает за получение данных о пользователях из базы данных
    | или другого хранилища.
    |
    | Поддерживаемые драйверы: "session"
    |
    */
    'guards' => [
        'web' => [
            'driver' => 'session',
            'provider' => 'users',
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | User Providers
    |--------------------------------------------------------------------------
    |
    | Провайдер пользователей определяет, как Laravel получает данные
    | пользователей из хранилища (например, базы данных).
    |
    | Можно настроить несколько провайдеров для разных моделей или таблиц
    | пользователей и назначить их для разных guard'ов.
    |
    | Поддерживаемые драйверы: "database", "eloquent"
    |
    */
    'providers' => [
        'users' => [
            'driver' => 'eloquent',      // Используем Eloquent ORM
            'model' => App\Models\User::class, // Модель пользователя
        ],

        // Пример альтернативного провайдера через прямую таблицу базы данных
        // 'users' => [
        //     'driver' => 'database',
        //     'table' => 'users',
        // ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Resetting Passwords
    |--------------------------------------------------------------------------
    |
    | Настройки сброса пароля. Можно создать несколько конфигураций для
    | разных типов пользователей.
    |
    | - expire — срок действия токена сброса в минутах
    | - throttle — интервал в секундах перед генерацией нового токена
    |   (защита от массовой генерации токенов)
    |
    */
    'passwords' => [
        'users' => [
            'provider' => 'users',
            'table' => 'password_reset_tokens',
            'expire' => 60,
            'throttle' => 60,
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Password Confirmation Timeout
    |--------------------------------------------------------------------------
    |
    | Время (в секундах), через которое потребуется повторное
    | подтверждение пароля. По умолчанию — 3 часа (10800 секунд).
    |
    */
    'password_timeout' => 10800,

];
