<?php

use Illuminate\Support\Facades\Facade;
use Illuminate\Support\ServiceProvider;

return [

    /*
    |--------------------------------------------------------------------------
    | Application Name
    |--------------------------------------------------------------------------
    |
    | Имя вашего приложения. Используется в уведомлениях, заголовках и других
    | местах, где нужно указать название приложения.
    |
    */
    'name' => env('APP_NAME', 'Laravel'),

    /*
    |--------------------------------------------------------------------------
    | Application Environment
    |--------------------------------------------------------------------------
    |
    | Определяет текущее окружение приложения: local, production, staging и т.д.
    | Значение берется из переменной окружения APP_ENV в файле .env
    |
    */
    'env' => env('APP_ENV', 'production'),

    /*
    |--------------------------------------------------------------------------
    | Application Debug Mode
    |--------------------------------------------------------------------------
    |
    | В режиме отладки выводятся детальные ошибки с трассировкой стека.
    | В production рекомендуется отключать (false).
    |
    */
    'debug' => (bool) env('APP_DEBUG', false),

    /*
    |--------------------------------------------------------------------------
    | Application URL
    |--------------------------------------------------------------------------
    |
    | Базовый URL приложения, который используется консолью Artisan и генерацией
    | ссылок. Убедитесь, что указан корректный URL вашего проекта.
    |
    */
    'url' => env('APP_URL', 'http://localhost'),

    /*
    |--------------------------------------------------------------------------
    | Asset URL
    |--------------------------------------------------------------------------
    |
    | Можно указать отдельный URL для подключения ассетов (JS, CSS, изображения),
    | например если они хранятся на CDN.
    |
    */
    'asset_url' => env('ASSET_URL'),

    /*
    |--------------------------------------------------------------------------
    | Application Timezone
    |--------------------------------------------------------------------------
    |
    | Часовой пояс по умолчанию для приложения. Используется в PHP-функциях
    | даты и времени.
    |
    */
    'timezone' => 'UTC',

    /*
    |--------------------------------------------------------------------------
    | Application Locale Configuration
    |--------------------------------------------------------------------------
    |
    | Локаль по умолчанию для переводов. Можно указать любую локаль, которая
    | поддерживается в папке resources/lang.
    |
    */
    'locale' => 'en',

    /*
    |--------------------------------------------------------------------------
    | Application Fallback Locale
    |--------------------------------------------------------------------------
    |
    | Локаль, которая используется, если текущая локаль недоступна.
    |
    */
    'fallback_locale' => 'en',

    /*
    |--------------------------------------------------------------------------
    | Faker Locale
    |--------------------------------------------------------------------------
    |
    | Локаль для генерации фейковых данных с помощью Faker (например,
    | адреса, телефонные номера и т.д.)
    |
    */
    'faker_locale' => 'en_US',

    /*
    |--------------------------------------------------------------------------
    | Encryption Key
    |--------------------------------------------------------------------------
    |
    | Секретный ключ шифрования. Должен быть 32-символьной случайной строкой.
    | Устанавливается через APP_KEY в .env.
    |
    */
    'key' => env('APP_KEY'),
    'cipher' => 'AES-256-CBC',

    /*
    |--------------------------------------------------------------------------
    | Maintenance Mode Driver
    |--------------------------------------------------------------------------
    |
    | Определяет драйвер для управления режимом обслуживания приложения.
    | "file" – хранит статус в файле, "cache" – в кэше (Redis/Database).
    |
    */
    'maintenance' => [
        'driver' => 'file',
        // 'store' => 'redis', // можно раскомментировать для хранения через кэш
    ],

    /*
    |--------------------------------------------------------------------------
    | Autoloaded Service Providers
    |--------------------------------------------------------------------------
    |
    | Список сервис-провайдеров, которые автоматически загружаются при каждом
    | запросе к приложению. Вы можете добавлять свои провайдеры здесь.
    |
    */
    'providers' => ServiceProvider::defaultProviders()->merge([
        /*
         * Application Service Providers
         */
        App\Providers\AppServiceProvider::class,
        App\Providers\AuthServiceProvider::class,
        App\Providers\BroadcastServiceProvider::class,
        App\Providers\EventServiceProvider::class,
        App\Providers\RouteServiceProvider::class,
    ])->toArray(),

    /*
    |--------------------------------------------------------------------------
    | Class Aliases
    |--------------------------------------------------------------------------
    |
    | Псевдонимы классов (Facades). Позволяют удобно использовать классы
    | без необходимости писать полный namespace.
    |
    */
    'aliases' => Facade::defaultAliases()->merge([
        // 'Example' => App\Facades\Example::class,
    ])->toArray(),

];
